volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:
  vscode_server:

services:

  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "0.0.0.0:${NGINX_SSLPORT_HOST}:${NGINX_SSLPORT}"

  ckan-dev:
    container_name: ckan-dev
    build:
      context: ckan/
      args:
        - TZ=${TZ}
    env_file:
      - .env
      - __project_env__
    links:
      - db
      - solr
      - redis
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:5000"
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./ckan/extensions:/root/extensions
      - ./src:/srv/app/src_extensions
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
      - ./__requirements__.txt:/root/requirements.txt
      - ./__commands__.txt:/root/commands.txt
      - ./__ckan_ini_configs__.txt:/root/ckan-ini-adds.txt
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://0.0.0.0:5000"]

  datapusher:
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://0.0.0.0:8800"]

  db:
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://0.0.0.0:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
