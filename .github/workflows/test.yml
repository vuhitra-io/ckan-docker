name: CKAN Docker Stack Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install make
      run: sudo apt-get update && sudo apt-get install -y make

    - name: Copy .env
      run: cp ./vht_core_envs/.ckan.env .env

    - name: Update Makefile
      run: |
        sed -i 's/docker exec -ti/docker exec -i/' Makefile

    - name: Build and start Docker stack
      run: |
        make create

    - name: Test CKAN
      run: |
        response=$(curl -sS -o /dev/null -w "%{http_code}" http://localhost:5000)
        if [ $response == "200" ]; then
          echo "CKAN is accessible. Test passed!"
        else
          echo "Failed to access CKAN. HTTP status code: $response"
          exit 1
        fi

    - name: Verify admin user creation
      run: |
        user_exists=$(docker exec -i ckan-dev ckan user list | grep admin)
        if [ -n "$user_exists" ]; then
          echo "Admin user created successfully."
        else
          echo "Failed to create admin user."
          exit 1
        fi

    - name: Verify API token creation
      run: |
        token_exists=$(docker exec -i ckan-dev ckan user token list admin | grep default-token)
        if [ -n "$token_exists" ]; then
          echo "API token created successfully."
        else
          echo "Failed to create API token."
          exit 1
        fi

    - name: Verify organization creation
      run: |
        token=$(docker exec -i ckan-dev ckan user token add admin default-token | tail -n 1 | tr -d '[:space:]')
        response=$(curl -s -H "Authorization: $token" http://localhost:5000/api/3/action/organization_list)
        if echo "$response" | grep -q "vuhitra-io"; then
          echo "Organization created successfully."
        else
          echo "Failed to create organization."
          exit 1
        fi